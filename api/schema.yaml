openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/v1/accounts/:
    get:
      operationId: api_v1_accounts_list
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
          description: ''
    post:
      operationId: api_v1_accounts_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Account'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
  /api/v1/accounts/{id}/:
    get:
      operationId: api_v1_accounts_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
    put:
      operationId: api_v1_accounts_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Account'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
    patch:
      operationId: api_v1_accounts_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAccount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAccount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAccount'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
    delete:
      operationId: api_v1_accounts_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/authentication/token/:
    post:
      operationId: api_v1_authentication_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/v1/brands/:
    get:
      operationId: api_v1_brands_list
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Brand'
          description: ''
    post:
      operationId: api_v1_brands_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Brand'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Brand'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Brand'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
          description: ''
  /api/v1/brands/{id}/:
    get:
      operationId: api_v1_brands_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this brand.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
          description: ''
    put:
      operationId: api_v1_brands_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this brand.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Brand'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Brand'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Brand'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
          description: ''
    patch:
      operationId: api_v1_brands_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this brand.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBrand'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBrand'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBrand'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
          description: ''
    delete:
      operationId: api_v1_brands_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this brand.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/categories/:
    get:
      operationId: api_v1_categories_list
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
    post:
      operationId: api_v1_categories_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /api/v1/categories/{id}/:
    get:
      operationId: api_v1_categories_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this category.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    put:
      operationId: api_v1_categories_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this category.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: api_v1_categories_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this category.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    delete:
      operationId: api_v1_categories_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this category.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/implementations/:
    get:
      operationId: api_v1_implementations_list
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Implementation'
          description: ''
    post:
      operationId: api_v1_implementations_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Implementation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Implementation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Implementation'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Implementation'
          description: ''
  /api/v1/implementations/{id}/:
    get:
      operationId: api_v1_implementations_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this implementation.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Implementation'
          description: ''
    put:
      operationId: api_v1_implementations_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this implementation.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Implementation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Implementation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Implementation'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Implementation'
          description: ''
    patch:
      operationId: api_v1_implementations_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this implementation.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedImplementation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedImplementation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedImplementation'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Implementation'
          description: ''
    delete:
      operationId: api_v1_implementations_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this implementation.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/inflows/:
    get:
      operationId: api_v1_inflows_list
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Inflow'
          description: ''
    post:
      operationId: api_v1_inflows_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Inflow'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Inflow'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Inflow'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inflow'
          description: ''
  /api/v1/inflows/{id}/:
    get:
      operationId: api_v1_inflows_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this inflow.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inflow'
          description: ''
    put:
      operationId: api_v1_inflows_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this inflow.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Inflow'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Inflow'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Inflow'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inflow'
          description: ''
    patch:
      operationId: api_v1_inflows_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this inflow.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInflow'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInflow'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInflow'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inflow'
          description: ''
    delete:
      operationId: api_v1_inflows_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this inflow.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/outflows/:
    get:
      operationId: api_v1_outflows_list
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Outflow'
          description: ''
    post:
      operationId: api_v1_outflows_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Outflow'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Outflow'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Outflow'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Outflow'
          description: ''
  /api/v1/outflows/{id}/:
    get:
      operationId: api_v1_outflows_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this outflow.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Outflow'
          description: ''
    put:
      operationId: api_v1_outflows_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this outflow.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Outflow'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Outflow'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Outflow'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Outflow'
          description: ''
    patch:
      operationId: api_v1_outflows_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this outflow.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOutflow'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOutflow'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOutflow'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Outflow'
          description: ''
    delete:
      operationId: api_v1_outflows_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this outflow.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/products/:
    get:
      operationId: api_v1_products_list
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          description: ''
    post:
      operationId: api_v1_products_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/v1/products/{id}/:
    get:
      operationId: api_v1_products_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this product.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: api_v1_products_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this product.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: api_v1_products_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this product.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: api_v1_products_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this product.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/suppliers/:
    get:
      operationId: api_v1_suppliers_list
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Supplier'
          description: ''
    post:
      operationId: api_v1_suppliers_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Supplier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Supplier'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
  /api/v1/suppliers/{id}/:
    get:
      operationId: api_v1_suppliers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this supplier.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
    put:
      operationId: api_v1_suppliers_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this supplier.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Supplier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Supplier'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
    patch:
      operationId: api_v1_suppliers_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this supplier.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSupplier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSupplier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSupplier'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
    delete:
      operationId: api_v1_suppliers_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this supplier.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: string
          format: uuid
        full_name:
          type: string
          readOnly: true
        password:
          type: string
          title: Senha
          maxLength: 128
        last_login:
          type: string
          format: date-time
          nullable: true
          title: Último login
        is_superuser:
          type: boolean
          title: Status de superusuário
          description: Indica que este usuário tem todas as permissões sem atribuí-las
            explicitamente.
        username:
          type: string
          title: Usuário
          description: Obrigatório. 150 caracteres ou menos. Letras, números e @/./+/-/_
            apenas.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          title: Primeiro nome
          maxLength: 150
        last_name:
          type: string
          title: Último nome
          maxLength: 150
        email:
          type: string
          format: email
          title: Endereço de email
          maxLength: 254
        is_staff:
          type: boolean
          title: Membro da equipe
          description: Indica que usuário consegue acessar este site de administração.
        is_active:
          type: boolean
          title: Ativo
          description: Indica que o usuário será tratado como ativo. Ao invés de excluir
            contas de usuário, desmarque isso.
        date_joined:
          type: string
          format: date-time
          title: Data de registro
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        sector:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SectorEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        groups:
          type: array
          items:
            type: integer
            title: Grupos
          title: Grupos
          description: Os grupos que este usuário pertence. Um usuário terá todas
            as permissões concedidas a cada um dos seus grupos.
        user_permissions:
          type: array
          items:
            type: integer
            title: Permissões do usuário
          title: Permissões do usuário
          description: Permissões específicas para este usuário.
      required:
      - created_at
      - full_name
      - password
      - updated_at
      - username
    BlankEnum:
      enum:
      - ''
    Brand:
      type: object
      properties:
        name:
          type: string
          maxLength: 200
        id:
          type: string
          format: uuid
          readOnly: true
      required:
      - id
      - name
    Category:
      type: object
      properties:
        name:
          type: string
          maxLength: 200
        id:
          type: string
          format: uuid
          readOnly: true
      required:
      - id
      - name
    Implementation:
      type: object
      properties:
        account_manager:
          type: string
          format: uuid
        product:
          type: string
          format: uuid
        client:
          type: string
          maxLength: 200
        cnpj:
          type: string
          maxLength: 20
        unit:
          type: string
          nullable: true
          maxLength: 50
        address:
          type: string
          maxLength: 300
        building_area:
          type: string
          nullable: true
          maxLength: 200
        serial_number:
          type: string
          nullable: true
          maxLength: 100
        mac:
          type: string
          nullable: true
          maxLength: 100
        id:
          type: string
          format: uuid
          readOnly: true
        solution:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SolutionEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        license:
          type: string
          maxLength: 50
        license_expiration_date:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/StatusEnum'
        management:
          $ref: '#/components/schemas/ManagementEnum'
        billing_date:
          type: string
          format: date
          nullable: true
        unifi_url_controller:
          type: string
          nullable: true
          maxLength: 500
        unifi_access:
          type: string
          nullable: true
          maxLength: 200
        unifi_password:
          type: string
          nullable: true
          maxLength: 200
        unifi_site_unity:
          type: string
          nullable: true
          maxLength: 200
        unifi_management_ip:
          type: string
          nullable: true
          maxLength: 200
        unifi_observations:
          type: string
          nullable: true
          maxLength: 500
        days_to_expires:
          type: string
          readOnly: true
        supplier:
          type: string
          format: uuid
      required:
      - account_manager
      - address
      - client
      - days_to_expires
      - id
      - product
      - supplier
    Inflow:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        product:
          type: string
          format: uuid
        supplier:
          type: string
          format: uuid
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        cost_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,2})?$
      required:
      - cost_price
      - id
      - product
      - quantity
      - supplier
    ManagementEnum:
      enum:
      - Cliente
      - Think Digital
      type: string
      description: |-
        * `Cliente` - Cliente
        * `Think Digital` - Think Digital
    NullEnum:
      enum:
      - null
    Outflow:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        product:
          type: string
          format: uuid
        implemented:
          type: boolean
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        selling_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,2})?$
          nullable: true
      required:
      - id
      - product
      - quantity
    PatchedAccount:
      type: object
      properties:
        id:
          type: string
          format: uuid
        full_name:
          type: string
          readOnly: true
        password:
          type: string
          title: Senha
          maxLength: 128
        last_login:
          type: string
          format: date-time
          nullable: true
          title: Último login
        is_superuser:
          type: boolean
          title: Status de superusuário
          description: Indica que este usuário tem todas as permissões sem atribuí-las
            explicitamente.
        username:
          type: string
          title: Usuário
          description: Obrigatório. 150 caracteres ou menos. Letras, números e @/./+/-/_
            apenas.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          title: Primeiro nome
          maxLength: 150
        last_name:
          type: string
          title: Último nome
          maxLength: 150
        email:
          type: string
          format: email
          title: Endereço de email
          maxLength: 254
        is_staff:
          type: boolean
          title: Membro da equipe
          description: Indica que usuário consegue acessar este site de administração.
        is_active:
          type: boolean
          title: Ativo
          description: Indica que o usuário será tratado como ativo. Ao invés de excluir
            contas de usuário, desmarque isso.
        date_joined:
          type: string
          format: date-time
          title: Data de registro
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        sector:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SectorEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        groups:
          type: array
          items:
            type: integer
            title: Grupos
          title: Grupos
          description: Os grupos que este usuário pertence. Um usuário terá todas
            as permissões concedidas a cada um dos seus grupos.
        user_permissions:
          type: array
          items:
            type: integer
            title: Permissões do usuário
          title: Permissões do usuário
          description: Permissões específicas para este usuário.
    PatchedBrand:
      type: object
      properties:
        name:
          type: string
          maxLength: 200
        id:
          type: string
          format: uuid
          readOnly: true
    PatchedCategory:
      type: object
      properties:
        name:
          type: string
          maxLength: 200
        id:
          type: string
          format: uuid
          readOnly: true
    PatchedImplementation:
      type: object
      properties:
        account_manager:
          type: string
          format: uuid
        product:
          type: string
          format: uuid
        client:
          type: string
          maxLength: 200
        cnpj:
          type: string
          maxLength: 20
        unit:
          type: string
          nullable: true
          maxLength: 50
        address:
          type: string
          maxLength: 300
        building_area:
          type: string
          nullable: true
          maxLength: 200
        serial_number:
          type: string
          nullable: true
          maxLength: 100
        mac:
          type: string
          nullable: true
          maxLength: 100
        id:
          type: string
          format: uuid
          readOnly: true
        solution:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SolutionEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        license:
          type: string
          maxLength: 50
        license_expiration_date:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/StatusEnum'
        management:
          $ref: '#/components/schemas/ManagementEnum'
        billing_date:
          type: string
          format: date
          nullable: true
        unifi_url_controller:
          type: string
          nullable: true
          maxLength: 500
        unifi_access:
          type: string
          nullable: true
          maxLength: 200
        unifi_password:
          type: string
          nullable: true
          maxLength: 200
        unifi_site_unity:
          type: string
          nullable: true
          maxLength: 200
        unifi_management_ip:
          type: string
          nullable: true
          maxLength: 200
        unifi_observations:
          type: string
          nullable: true
          maxLength: 500
        days_to_expires:
          type: string
          readOnly: true
        supplier:
          type: string
          format: uuid
    PatchedInflow:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        product:
          type: string
          format: uuid
        supplier:
          type: string
          format: uuid
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        cost_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,2})?$
    PatchedOutflow:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        product:
          type: string
          format: uuid
        implemented:
          type: boolean
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        selling_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,2})?$
          nullable: true
    PatchedProduct:
      type: object
      properties:
        name:
          type: string
          maxLength: 200
        brand:
          type: string
          format: uuid
        category:
          type: string
          format: uuid
        quantity:
          type: string
          readOnly: true
        id:
          type: string
          format: uuid
          readOnly: true
    PatchedSupplier:
      type: object
      properties:
        name:
          type: string
          maxLength: 200
        id:
          type: string
          format: uuid
          readOnly: true
    Product:
      type: object
      properties:
        name:
          type: string
          maxLength: 200
        brand:
          type: string
          format: uuid
        category:
          type: string
          format: uuid
        quantity:
          type: string
          readOnly: true
        id:
          type: string
          format: uuid
          readOnly: true
      required:
      - brand
      - category
      - id
      - name
      - quantity
    SectorEnum:
      enum:
      - Comercial
      - Financeiro
      - Jurídico
      - Técnico
      - Suporte
      type: string
      description: |-
        * `Comercial` - Comercial
        * `Financeiro` - Financeiro
        * `Jurídico` - Jurídico
        * `Técnico` - Técnico
        * `Suporte` - Suporte
    SolutionEnum:
      enum:
      - Zoox Wi-fi
      - Propz
      type: string
      description: |-
        * `Zoox Wi-fi` - Zoox Wi-fi
        * `Propz` - Propz
    StatusEnum:
      enum:
      - Não iniciado
      - Implementação
      - Validação cliente
      - Concluída
      - Bloqueada
      type: string
      description: |-
        * `Não iniciado` - Não iniciado
        * `Implementação` - Implementação
        * `Validação cliente` - Validação cliente
        * `Concluída` - Concluída
        * `Bloqueada` - Bloqueada
    Supplier:
      type: object
      properties:
        name:
          type: string
          maxLength: 200
        id:
          type: string
          format: uuid
          readOnly: true
      required:
      - id
      - name
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
